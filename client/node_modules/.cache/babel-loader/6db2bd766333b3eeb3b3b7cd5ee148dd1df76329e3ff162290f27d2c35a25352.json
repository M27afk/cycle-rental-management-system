{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nakula\\\\dbms-project\\\\src\\\\TablesForDataDisplaying\\\\Table.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./style.css\";\nimport data from \"./src/MockData.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table() {\n  _s();\n  const [contents, setContent] = useState(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"content-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Station ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Station Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Station Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Cycle Cpacity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: contents.map(content => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: content.stnID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: content.stnName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: content.stnAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: content.cycCapacity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: content.empID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_s(Table, \"xChiC9hB4AVaiAZ+miKAk+VyQMU=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","data","Table","contents","setContent","map","content","stnID","stnName","stnAddress","cycCapacity","empID"],"sources":["C:/Users/Nakula/dbms-project/src/TablesForDataDisplaying/Table.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\nimport data from \"./src/MockData.json\";\r\nfunction Table() {\r\n  const [contents, setContent] = useState(data);\r\n  return (\r\n    <div className=\"container\">\r\n      <table className=\"content-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Station ID</th>\r\n            <th>Station Name</th>\r\n            <th>Station Address</th>\r\n            <th>Cycle Cpacity</th>\r\n            <th>Employee ID</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {contents.map((content) => (\r\n            <tr>\r\n              <td>{content.stnID}</td>\r\n              <td>{content.stnName}</td>\r\n              <td>{content.stnAddress}</td>\r\n              <td>{content.cycCapacity}</td>\r\n              <td>{content.empID}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AACpB,OAAOC,IAAI,MAAM,qBAAqB;AAAC;AACvC,SAASC,KAAK,GAAG;EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAACC,IAAI,CAAC;EAC7C,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,uBACxB;MAAO,SAAS,EAAC,eAAe;MAAA,wBAC9B;QAAA,uBACE;UAAA,wBACE;YAAA,UAAI;UAAU;YAAA;YAAA;YAAA;UAAA,QAAK,eACnB;YAAA,UAAI;UAAY;YAAA;YAAA;YAAA;UAAA,QAAK,eACrB;YAAA,UAAI;UAAe;YAAA;YAAA;YAAA;UAAA,QAAK,eACxB;YAAA,UAAI;UAAa;YAAA;YAAA;YAAA;UAAA,QAAK,eACtB;YAAA,UAAI;UAAW;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA;UAAA;UAAA;UAAA;QAAA;MACjB;QAAA;QAAA;QAAA;MAAA,QACC,eACR;QAAA,UACGE,QAAQ,CAACE,GAAG,CAAEC,OAAO,iBACpB;UAAA,wBACE;YAAA,UAAKA,OAAO,CAACC;UAAK;YAAA;YAAA;YAAA;UAAA,QAAM,eACxB;YAAA,UAAKD,OAAO,CAACE;UAAO;YAAA;YAAA;YAAA;UAAA,QAAM,eAC1B;YAAA,UAAKF,OAAO,CAACG;UAAU;YAAA;YAAA;YAAA;UAAA,QAAM,eAC7B;YAAA,UAAKH,OAAO,CAACI;UAAW;YAAA;YAAA;YAAA;UAAA,QAAM,eAC9B;YAAA,UAAKJ,OAAO,CAACK;UAAK;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA;UAAA;UAAA;UAAA;QAAA,QAE3B;MAAC;QAAA;QAAA;QAAA;MAAA,QACI;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV;AAAC,GA5BQT,KAAK;AAAA,KAALA,KAAK;AA8Bd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}